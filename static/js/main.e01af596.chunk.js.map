{"version":3,"sources":["logo.svg","App.js","Action/index.js","reportWebVitals.js","Reducer/reducers.js","Reducer/index.js","store.js","index.js"],"names":["App","dispatch","useDispatch","mystate","useSelector","State","changeNumber","className","id","Button","onClick","type","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAe,I,6BCkBAA,MAZf,WACC,IAAMC,EAAWC,cACXC,EAAUC,aAAY,SAACC,GAAD,OAASA,EAAMC,gBAC1C,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKC,GAAG,KACR,mBAAGD,UAAU,OAAb,SAAqBJ,IACrB,cAACM,EAAA,EAAD,CAAQC,QAAS,kBAAIT,ECXhB,CACHU,KAAM,SDUoCC,QAAQ,UAApD,+BEDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qBCEGR,EARI,WAA8B,IAA7BgB,EAA4B,uDADjC,EACuBC,EAAU,uCAC9C,MACO,QADCA,EAAOZ,KAEJW,EAAM,EAENA,GCDEE,EAHGC,YAAgB,CAChCnB,iBCAWoB,EADDC,YAAYH,GCQ1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAWJ,MAAOA,EAAlB,SACA,cAAC,EAAD,QAGFK,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.e01af596.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport { incNumber } from './Action';\nimport { useSelector,useDispatch  } from 'react-redux';\nimport {Button} from 'react-bootstrap'\nimport './App.css';\n\nfunction App() {\n const dispatch = useDispatch()\n const mystate = useSelector((State)=>State.changeNumber)\n  return (\n    <div className=\"App\">\n      <div id=\"\"></div>\n      <p className=\"demo\">{mystate}</p>\n      <Button onClick={()=>dispatch(incNumber())} variant=\"success\">Live Location</Button>\n    </div>\n  );\n}\n\nexport default App;\n","\r\nexport  const incNumber =()=> {\r\n    return {\r\n        type: 'INC',\r\n\r\n      }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const iniState = 1;\r\nconst changeNumber = (state = iniState, action)=> {\r\n    switch (action.type) {\r\n      case 'INC':\r\n        return state+1\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  export default changeNumber","import changeNumber from './reducers';\r\nimport { combineReducers } from 'redux'\r\nconst rootReducer = combineReducers({\r\n    changeNumber\r\n  })\r\n  export default rootReducer;","import { createStore } from 'redux'\r\nimport rootReducer from './Reducer'\r\nconst store = createStore(rootReducer);\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider  store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}